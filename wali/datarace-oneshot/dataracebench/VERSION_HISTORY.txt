V1.0.0 2017-06-01 (initial public release)
       * 72 C micro benchmarks.
       * evaluation script
V1.0.1 2017-08-03
       * added variable initializations in benchmarks
         reductionmissing-orig-yes.c and reductionmissing-var-yes.c
       * added recording of full error messages in error log to
         evaluation script.
V1.0.2 2017-09-07
       * fixed Ubuntu 16 linker issue for option --run
       * added status message while evaluation is performed
       * improved time measurement output precision in test script
V1.1.0 2017-09-15
       * swapped file names of two benchmarks: antidep1-var-yes.c and antidep2-orig-yes.c
       * added 7 additional micro-benchmarks using omp flush, task depend, single, etc., 
         making it 79 microbenchmarks in total.
       * merged user-suggested fix for private(j) from jprotze to enforce 
         only singler-pair dependence per test when possible (Thanks to jprotze ).
       * refined the outofbounds benchmarks to only have valid wrap around memory accesses 
V1.1.1 2017-10-04
       * refined source code comments to be consistent: using C-style /* ... */
       * specified data race pairs in comments when applicable: using a format of
            var1@line_no:col_no vs. var2@line_no:col_no
V1.2.0 2018-06-05
       * Increased the test coverage of OpenMP directives and clauses(up to OpenMP 4.5 ), 
       including threadprivate, collapse, taskloop, teams, distribute, atomic, flush, depend, 
       critical, barrier, taskwait, taskgroup, copyin and copyprivate, linear, if, etc.
       * Increased the coverage of data-sharing attribute rules defined in OpenMP 4.5, including 
       rules related to function arguments, static and dynamic storage duration, variables which 
       are not referenced in a construct, mapped array sections, and clauses (collapse and order) 
       associating multiple for loops, etc.
       * Renamed all microbenchmarks to be DRBxxx-namewhere xxx is the 3-digit benchmark ID number.
       * Added a few tests related to taskwait, taskgroup and ordered. They are contributed by the 
       Rice University.
       * Improved the test scripts to support C++ code, better report testing errors.
       * Miscellaneous fixes to typos.
V1.3.0 2020-08-19
       * We have added equivalent Fortran versions for existing C/C++ benchmark programs.
       * Additional benchmark programs are added to cover some of the latest OpenMP 5.0 language features.
       * We have collected new kernels representing new patterns from literature and other benchmarks 
       (e.g., NAS Parallel Benchmark).
       * In order to reduce duplicated benchmark programs, we explore a simple distance-based code 
       similarity analysis, combining both static and dynamic features of OpenMP loops.
       * The test process has been improved to allow users to select customized subsets of benchmarks 
       to evaluate their tools. We also dockerize tools to streamline the entire benchmarking process 
       to quickly generate a dashboard showing the state-of-the-art.
       * Using the enhanced DataRaceBench, we re-evaluate several available data race detection tools 
       and generate more comprehensive results showing their strengths and limitations.
