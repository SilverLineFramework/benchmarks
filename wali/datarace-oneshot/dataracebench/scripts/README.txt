1. script: test-harness.sh
test-harness.sh is used to compile the microbenchmarks and perform the test with dynamic tools.
Please check the available options from --help option.

2. metric.py
metric.py counts the statistics and calculate the metrics for individual tool.  
Specify the tool report in CSV format to get the metrics report.
Command: python metric.py $CSV_FILE_PATH

3. log-parser
log-parser directory collects all log parsers for various data race tool to convert a raw log file generated by a tool into a json file output.
use --tool option to specfify archer, tsan, inspector, romp, coderrect, and llov.
Command: python log-parser/logParser.py --tool $TOOL $LOG_FILE_PATH

4. raceCheck_line_Info.py
raceCheck_line_Info.py performs high-precision evaluation using source line information for 5 selected tools: inspector, tsan, romp, coderrect, llov. 
The script requires path to directories hosting the source file encodings and tool json reports.
Command: python raceCheck_line_Info.py $SRC_ENCODING_DIR $INSPECTOR_REPORT_DIR $TSAN_REPORT_DIR $ROMP_REPORT_DIR $CODERRECT_REPORT_DIR $LLOV_REPORT_DIR 

5. raceCheck_typeline_Info.py
raceCheck_line_Info.py performs high-precision evaluation using source line and variable access type information for 3 selected tools: inspector, tsan, llov.
The script requires path to directories hosting the source file encodings and tool json reports.
Command: python raceCheck_line_Info.py $SRC_ENCODING_DIR $INSPECTOR_REPORT_DIR $TSAN_REPORT_DIR  $LLOV_REPORT_DIR 
